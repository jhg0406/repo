//2565

#include<iostream>
using namespace std;

int Left[501];
int Right[501];
int N;
int dp[501][501];

int find2(int, int);

int big(int x, int y)
{
	if (x > y) return x;
	else return y;
}

int find1(int lidx, int ridx)
{
	if (lidx > 500)
		return 0;

	int& ret = dp[lidx][ridx];
	if (ret != -1)
		return ret;

	for (int i = lidx; i < 501; i++)
		if (Left[i] > ridx)
			ret = big(ret, find2(i, Left[i]));
	++ret;
	return ret;
}

int find2(int lidx, int ridx)
{
	if (ridx > 500)
		return 0;

	int& ret = dp[lidx][ridx];
	if (ret != -1)
		return ret;

	for(int i = ridx; i<501; i++)
		if(Right[i] > lidx)
			ret = big(ret, find1(Right[i], i));
	++ret;
	return ret;
}

int main()
{
	cin >> N;
	int x, y;
	int ans = 0;
	for (int i = 0; i < N; i++)
	{
		cin >> x >> y;
		Left[x] = y;
		Right[y] = x;
	}
	for (int i = 0; i < 501; i++)
		for (int j = 0; j < 501; j++)
			dp[i][j] = -1;
	for (int i = 1; i < 501; i++)
		ans = big(ans, find1(i, 0));

	cout << N - ans;
}